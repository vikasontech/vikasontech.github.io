<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mongo on Vikas Blogs</title>
    <link>https://vikasontech.github.io/tags/mongo/</link>
    <description>Recent content in mongo on Vikas Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 26 Apr 2020 07:15:08 +0700</lastBuildDate>
    
	<atom:link href="https://vikasontech.github.io/tags/mongo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring&#43;kotlin&#43;mongo&#43;testcontainer</title>
      <link>https://vikasontech.github.io/posts/spring&#43;kotlin&#43;mongo&#43;testcontainer/</link>
      <pubDate>Sun, 26 Apr 2020 07:15:08 +0700</pubDate>
      
      <guid>https://vikasontech.github.io/posts/spring&#43;kotlin&#43;mongo&#43;testcontainer/</guid>
      <description>Introduction
In this project we shall see how to use testcontainer to test the repository created in mongodb As per their document Testcontainers is a Java library that supports JUnit tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.
Prerequisit
 Docker  Create sample project
Go to the spring initializer and create project with language as kotlin and dependencies required are webflux &amp;amp; reactive mongo db</description>
    </item>
    
  </channel>
</rss>